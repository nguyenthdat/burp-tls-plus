package burp

import com.intellij.uiDesigner.core.GridConstraints
import com.intellij.uiDesigner.core.GridLayoutManager
import com.intellij.uiDesigner.core.Spacer
import java.awt.Dimension
import java.awt.Insets
import java.awt.event.ActionEvent
import java.awt.event.ActionListener
import javax.swing.*

class SettingsTab(settings: Settings) {
    private var comboBoxFingerprint: JComboBox<*>? = null
    private var panelMain: JPanel? = null
    private var labelFingerprint: JLabel? = null
    private var textFieldSpoofProxyAddress: JTextField? = null
    private var textFieldInterceptProxyAddress: JTextField? = null
    private var textFieldBurpProxyAddress: JTextField? = null
    private var labelSpoofProxyAddress: JLabel? = null
    private var buttonSave: JButton? = null
    private var labelTimeout: JLabel? = null
    private var spinnerHttpTimout: JSpinner? = null
    private var labelInterceptProxyAddress: JLabel? = null
    private var labelBurpProxyAddress: JLabel? = null
    private var checkBoxButtonUseInterceptedFingerprint: JCheckBox? = null
    private var tabbedPaneTab: JTabbedPane? = null
    private var panelSettings: JPanel? = null
    private var panelAdvanced: JPanel? = null
    private var buttonSaveAdvanced: JButton? = null
    private var labelHexClientHello: JLabel? = null
    private var textFieldHexClientHello: JTextField? = null

    val uI: JPanel
        get() = this.panelMain!!

    init {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        `$$$setupUI$$$`()
    }

    init {
        textFieldInterceptProxyAddress!!.setText(settings.interceptProxyAddress)
        textFieldBurpProxyAddress!!.setText(settings.burpProxyAddress)
        textFieldSpoofProxyAddress!!.setText(settings.spoofProxyAddress)
        textFieldHexClientHello!!.setText(settings.hexClientHello)
        spinnerHttpTimout!!.setValue(settings.httpTimeout)
        checkBoxButtonUseInterceptedFingerprint!!.setSelected(settings.useInterceptedFingerprint)
        for (item in settings.getFingerprints()) {
            comboBoxFingerprint!!.addItem(item)
        }
        comboBoxFingerprint!!.setSelectedItem(settings.fingerprint)

        buttonSave!!.addActionListener(ActionListener { e: ActionEvent? ->
            settings.spoofProxyAddress = textFieldSpoofProxyAddress!!.getText()
            settings.fingerprint = (comboBoxFingerprint.getSelectedItem() as kotlin.String?)!!
            settings.hexClientHello = textFieldHexClientHello!!.getText()
            settings.httpTimeout = spinnerHttpTimout!!.getValue() as Int
        })

        buttonSaveAdvanced!!.addActionListener(ActionListener { e: ActionEvent? ->
            settings.interceptProxyAddress = textFieldInterceptProxyAddress!!.getText()
            settings.burpProxyAddress = textFieldBurpProxyAddress!!.getText()
            settings.useInterceptedFingerprint = checkBoxButtonUseInterceptedFingerprint!!.isSelected()
        })
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private fun `$$$setupUI$$$`() {
        panelMain = JPanel()
        panelMain!!.setLayout(GridLayoutManager(3, 5, Insets(0, 0, 0, 0), -1, -1))
        tabbedPaneTab = JTabbedPane()
        panelMain!!.add(
            tabbedPaneTab,
            GridConstraints(
                0,
                0,
                1,
                1,
                GridConstraints.ANCHOR_CENTER,
                GridConstraints.FILL_BOTH,
                GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW,
                null,
                Dimension(200, 200),
                null,
                0,
                false
            )
        )
        panelSettings = JPanel()
        panelSettings!!.setLayout(GridLayoutManager(10, 1, Insets(0, 0, 0, 0), -1, -1))
        tabbedPaneTab!!.addTab("settings", panelSettings)
        labelSpoofProxyAddress = JLabel()
        labelSpoofProxyAddress!!.setRequestFocusEnabled(false)
        labelSpoofProxyAddress!!.setText("Listen address:")
        labelSpoofProxyAddress!!.setToolTipText("")
        panelSettings!!.add(
            labelSpoofProxyAddress,
            GridConstraints(
                0,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_FIXED,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
        textFieldSpoofProxyAddress = JTextField()
        textFieldSpoofProxyAddress!!.setToolTipText("Local address the  proxy server should listen on. Requires extension reload.")
        panelSettings!!.add(
            textFieldSpoofProxyAddress,
            GridConstraints(
                1,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_WANT_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                Dimension(150, -1),
                null,
                0,
                false
            )
        )
        labelFingerprint = JLabel()
        labelFingerprint!!.setEnabled(true)
        labelFingerprint!!.setHorizontalAlignment(10)
        labelFingerprint!!.setText("Fingerprint:")
        labelFingerprint!!.setVerticalAlignment(0)
        labelFingerprint!!.setVerticalTextPosition(0)
        panelSettings!!.add(
            labelFingerprint,
            GridConstraints(
                4,
                0,
                1,
                1,
                GridConstraints.ANCHOR_NORTHWEST,
                GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_FIXED,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
        comboBoxFingerprint = JComboBox<Any?>()
        panelSettings!!.add(
            comboBoxFingerprint,
            GridConstraints(
                5,
                0,
                1,
                1,
                GridConstraints.ANCHOR_NORTHWEST,
                GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
        labelTimeout = JLabel()
        labelTimeout!!.setText("Http connection timeout (seconds)")
        panelSettings!!.add(
            labelTimeout,
            GridConstraints(
                6,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_FIXED,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
        spinnerHttpTimout = JSpinner()
        spinnerHttpTimout!!.setToolTipText("The maximum amount of time a dial will wait for a connect to complete.")
        panelSettings!!.add(
            spinnerHttpTimout,
            GridConstraints(
                7,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_WANT_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
        val panel1 = JPanel()
        panel1.setLayout(GridLayoutManager(1, 1, Insets(0, 0, 0, 0), -1, -1))
        panelSettings!!.add(
            panel1,
            GridConstraints(
                9,
                0,
                1,
                1,
                GridConstraints.ANCHOR_CENTER,
                GridConstraints.FILL_BOTH,
                GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW,
                null,
                null,
                null,
                0,
                false
            )
        )
        labelHexClientHello = JLabel()
        labelHexClientHello!!.setRequestFocusEnabled(false)
        labelHexClientHello!!.setText("Hex Client Hello:")
        labelHexClientHello!!.setToolTipText("")
        panelSettings!!.add(
            labelHexClientHello,
            GridConstraints(
                2,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_FIXED,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
        textFieldHexClientHello = JTextField()
        textFieldHexClientHello!!.setText("")
        textFieldHexClientHello!!.setToolTipText("Custom client hello as hex stream. Leave it empty if you want it to be automatically detected.")
        panelSettings!!.add(
            textFieldHexClientHello,
            GridConstraints(
                3,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_WANT_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                Dimension(150, -1),
                null,
                0,
                false
            )
        )
        buttonSave = JButton()
        buttonSave!!.setText("Save all settings")
        panelSettings!!.add(
            buttonSave,
            GridConstraints(
                8,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
        panelAdvanced = JPanel()
        panelAdvanced!!.setLayout(GridLayoutManager(7, 1, Insets(0, 0, 0, 0), -1, -1))
        panelAdvanced!!.setToolTipText("")
        tabbedPaneTab!!.addTab("advanced", panelAdvanced)
        labelInterceptProxyAddress = JLabel()
        labelInterceptProxyAddress!!.setEnabled(true)
        labelInterceptProxyAddress!!.setText("Intercept proxy address:")
        panelAdvanced!!.add(
            labelInterceptProxyAddress,
            GridConstraints(
                1,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_FIXED,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
        textFieldInterceptProxyAddress = JTextField()
        textFieldInterceptProxyAddress!!.setToolTipText("Local address the intercept proxy server should listen on. Use it to configure proxy on your client. Requires extension reload.")
        panelAdvanced!!.add(
            textFieldInterceptProxyAddress,
            GridConstraints(
                2,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_WANT_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
        labelBurpProxyAddress = JLabel()
        labelBurpProxyAddress!!.setText("Burp proxy address:")
        panelAdvanced!!.add(
            labelBurpProxyAddress,
            GridConstraints(
                3,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_FIXED,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
        textFieldBurpProxyAddress = JTextField()
        textFieldBurpProxyAddress!!.setText("")
        panelAdvanced!!.add(
            textFieldBurpProxyAddress,
            GridConstraints(
                4,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_WANT_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                Dimension(150, -1),
                null,
                0,
                false
            )
        )
        buttonSaveAdvanced = JButton()
        buttonSaveAdvanced!!.setHideActionText(false)
        buttonSaveAdvanced!!.setText("Save all settings")
        panelAdvanced!!.add(
            buttonSaveAdvanced,
            GridConstraints(
                5,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
        val panel2 = JPanel()
        panel2.setLayout(GridLayoutManager(1, 1, Insets(0, 0, 0, 0), -1, -1))
        panelAdvanced!!.add(
            panel2,
            GridConstraints(
                6,
                0,
                1,
                1,
                GridConstraints.ANCHOR_CENTER,
                GridConstraints.FILL_BOTH,
                GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW,
                null,
                null,
                null,
                0,
                false
            )
        )
        val spacer1: Spacer = Spacer()
        panel2.add(
            spacer1,
            GridConstraints(
                0,
                0,
                1,
                1,
                GridConstraints.ANCHOR_CENTER,
                GridConstraints.FILL_VERTICAL,
                1,
                GridConstraints.SIZEPOLICY_WANT_GROW,
                null,
                null,
                null,
                0,
                false
            )
        )
        checkBoxButtonUseInterceptedFingerprint = JCheckBox()
        checkBoxButtonUseInterceptedFingerprint!!.setText("Use intercepted tls fingerprint")
        panelAdvanced!!.add(
            checkBoxButtonUseInterceptedFingerprint,
            GridConstraints(
                0,
                0,
                1,
                1,
                GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false
            )
        )
    }

    /**
     * @noinspection ALL
     */
    fun `$$$getRootComponent$$$`(): JComponent {
        return panelMain!!
    }
}